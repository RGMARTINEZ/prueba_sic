package co.gov.sic.pruebarafael.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import co.gov.sic.pruebarafael.model.Persona;
import co.gov.sic.pruebarafael.service.PersonasService;

@CrossOrigin(origins = "http://localhost:8080")
@RestController
@RequestMapping("/api")
public class PersonaController {

	@Autowired
	PersonasService servicePersona;

	@GetMapping("/personas")
	public ResponseEntity<List<Persona>> getAllPersonas() {
		try {
			List<Persona> personas = new ArrayList<Persona>();

			personas = servicePersona.GetAllListado();

			if (personas.isEmpty()) {
				return new ResponseEntity<>(HttpStatus.NO_CONTENT);
			}

			return new ResponseEntity<>(personas, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	@GetMapping("/personas/{id}")
	public ResponseEntity<Persona> getPersonaById(@PathVariable("id") long id) {
		try {
			Persona personas = new Persona();

			personas = servicePersona.PersonaById(id);

			if (personas != null) {
				return new ResponseEntity<>(personas, HttpStatus.OK);
			}

			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		} catch (Exception e) {
			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	@PostMapping("/personas")
	public ResponseEntity<Persona> PostPersona(@RequestBody Persona persona) {
		try {
			Persona personas = new Persona();

			personas = servicePersona.PostPersona(persona);

			if (personas != null) {
				return new ResponseEntity<>(personas, HttpStatus.OK);
			}

			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		} catch (Exception e) {
			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	@PutMapping("/personas")
	public ResponseEntity<Persona> PutPersona(@RequestBody Persona p) {
		try {
			Persona personas = new Persona();

			personas = servicePersona.PutPersona(p);

			if (personas != null) {
				return new ResponseEntity<>(personas, HttpStatus.OK);
			}

			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		} catch (Exception e) {
			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

}
